@import url("https://fonts.googleapis.com/css2?family=Libre+Franklin&display=swap");

:root {
  --section-padding: 8px;
  --section-margin: 8px;
  --border-radius-default: 0.75rem;
  --primary-color: #00ffff;
  --primary-color-dark: #008181;
  --shade-color: #494949da;
  --color-shadow: grey;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Libre Franklin", sans-serif;
}

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
}

button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 32px;
  padding: var(--section-padding) calc(var(--section-padding) * 2);
  text-decoration: none;
  font-size: 1.5rem;
  transition-duration: 0.2s;
}

button:not(:disabled),
input:not(:disabled),
input:not(:disabled) + label {
  cursor: pointer;
}

button:not(:disabled):hover {
  background-color: var(--primary-color-dark);
}

ul {
  list-style-type: none;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  background: rgba(241, 241, 241, 0.849);
}

body > * {
  padding: var(--section-padding);
}

h1 {
  font-size: 3rem;
}

#search-form {
  position: relative;
}

input[type="text"] {
  border-radius: var(--border-radius-default);
  padding: var(--section-padding);
  border: 0;
  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);
}

#city-submit-btn {
  position: absolute;
  right: 1rem;
  background-image: url("/src/images/magnify.svg");
  background-repeat: no-repeat;
  background-size: cover;
  padding: 1rem;
  background-color: inherit;
  vertical-align: top;
  /* margin: 0 -2rem; */
}

h2 {
  font-size: 2rem;
}

.error {
  color: red;
}

#weather-data-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  background: var(--primary-color);
  border-radius: var(--border-radius-default);
  padding: 2rem;
}

#weather-icon-container {
  padding: 4rem;
  background: no-repeat center center;
  background-size: cover;
}

/* Sunrise sunset styling */
/* .circle {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background: #eee;
  position: relative;
}

.point {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #333;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.point1 {
  transform: translate(-50%, -50%) rotate(calc(var(--percentage1) * 3.6deg));
}

.point2 {
  transform: translate(-50%, -50%) rotate(calc(var(--percentage2) * 3.6deg));
}

.overlay {
  width: 100%;
  height: 50%;
  position: absolute;
  top: 0;
  left: 0;
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 1) 100%
  );
  z-index: 1;
} */
.circle {
  width: 200px;
  height: 200px;
  background-color: #ff0000;
  border-radius: 50%;
  position: relative;
  overflow: hidden;
}
.point {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #000;
  border-radius: 50%;
  transform: translate(-50%, -50%);
}
.point1 {
  top: 50%;
  left: 0%;
}
.point2 {
  top: 50%;
  left: 100%;
}
.mask {
  position: absolute;
  width: 200%;
  height: 100%;
  background-color: #f1f1f1;
  transform: translate(-50%, 0%);
  z-index: 1;
  clip-path: polygon(0 0, 100% 0, 100% 50%, 50% 100%, 0 50%);
}

/* Toggle switch styling */
input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

.check-trail {
  display: flex;
  align-items: center;
  width: 9em;
  height: 5em;
  background: #2c3e50;
  border-radius: 2.5em;
  transition: all 0.5s ease;
  cursor: pointer;
}

.check-handler {
  display: flex;
  margin-left: 0.5em;
  justify-content: center;
  align-items: center;
  width: 4em;
  height: 4em;
  background: #34495e;
  border-radius: 50%;
  transition: all 0.5s ease;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
}
.check-handler:before {
  content: "C";
  color: white;
  font-size: 2em;
  font-weight: bold;
}

input[type="checkbox"]:checked + .check-trail {
  background: #16a085;
}
input[type="checkbox"]:checked + .check-trail .check-handler {
  margin-left: 50%;
  background: #1abc9c;
}
input[type="checkbox"]:checked + .check-trail .check-handler::before {
  content: "F";
}
